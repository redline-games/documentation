{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Base Project Documentation We have compiled a brief documentation of the base project and other RLG packages that will help develop games with much more ease, fluidity and speed. Please go through each page to make sure you are aware of all features and how to use them. Components GameManager.cs mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. GameManager.Instance.GetCurrency - Print help message and exit. Project layout GameManger mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. This is a blockquote. Some of these words are emphasized . Some of these words are emphasized also . Use two asterisks for strong emphasis . Or, if you prefer, use two underscores instead . I strongly recommend against using any `<blink>` tags. I wish SmartyPants used named entities like `&mdash;` instead of decimal-encoded entities like `&#8212;`. Cupcake indexer is a snazzy new project for indexing small cakes. Above: Cupcake indexer in progress This is an example link .","title":"Home"},{"location":"#welcome-to-base-project-documentation","text":"We have compiled a brief documentation of the base project and other RLG packages that will help develop games with much more ease, fluidity and speed. Please go through each page to make sure you are aware of all features and how to use them.","title":"Welcome to Base Project Documentation"},{"location":"#components","text":"GameManager.cs mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. GameManager.Instance.GetCurrency - Print help message and exit.","title":"Components"},{"location":"#project-layout","text":"GameManger mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. This is a blockquote. Some of these words are emphasized . Some of these words are emphasized also . Use two asterisks for strong emphasis . Or, if you prefer, use two underscores instead . I strongly recommend against using any `<blink>` tags. I wish SmartyPants used named entities like `&mdash;` instead of decimal-encoded entities like `&#8212;`. Cupcake indexer is a snazzy new project for indexing small cakes. Above: Cupcake indexer in progress This is an example link .","title":"Project layout"},{"location":"about/","text":"About Something about the base package Details","title":"About"},{"location":"about/#about","text":"Something about the base package","title":"About"},{"location":"about/#details","text":"","title":"Details"},{"location":"beautification/","text":"Beautification We have a few custom features that enable you to organize and beautify your project setup. Hierarchy Separators Use this to sort and color-code the hierarchy. Simply apply the relevant tags to apply the style. Inspector Horizontal Line Use this to sort related items within a script.","title":"Beautification"},{"location":"beautification/#beautification","text":"We have a few custom features that enable you to organize and beautify your project setup.","title":"Beautification"},{"location":"beautification/#hierarchy-separators","text":"Use this to sort and color-code the hierarchy. Simply apply the relevant tags to apply the style.","title":"Hierarchy Separators"},{"location":"beautification/#inspector-horizontal-line","text":"Use this to sort related items within a script.","title":"Inspector Horizontal Line"},{"location":"creativepackage/","text":"Creative Package We have a bunch of features packed into a single package that will help you speed up the development for CPI videos. You can download the creative package here Once imported, you can access all features via the top bar Creatives > Creative Wizard Features Onboarding hand","title":"Creative Package"},{"location":"creativepackage/#creative-package","text":"We have a bunch of features packed into a single package that will help you speed up the development for CPI videos. You can download the creative package here Once imported, you can access all features via the top bar Creatives > Creative Wizard","title":"Creative Package"},{"location":"creativepackage/#features","text":"","title":"Features"},{"location":"creativepackage/#onboarding-hand","text":"","title":"Onboarding hand"},{"location":"features/","text":"Features Currency Manager Money matters \ud83d\udcb8. Use one manager per currency, assign relevant data in the corresponding SO and you're set. [CurrencyManager] prefab can be found in Assets/Prefabs/Currency Make sure the respective 2D and 3D currency prefabs are added in PoolBoss Pooling Pool is cool \ud83d\ude0e. When you need a bunch of the same prefab multiple times, use pooling instead of spawning them at runtime for better runtime performance. Don't forget to add your prefabs to PoolBoss Level End Screens Some wins \ud83c\udf89, some fails \u2620\ufe0f. A set of default screens have already been integrated for easy game flow. To customize, extend the LevelEndScreenBase script and create custom win and lose scripts Progress Bars Keep progressing \ud83d\udcc8. A variety of progress bars have been pre-made for easy integration You can find the different types of progress bars in Assets/Prefabs/ProgressBar Haptics Tap, vibrate, experience \ud83d\udcf3. Choose from pre-built presets like Success \u2705, Failure \u26a0\ufe0f, Light \ud83e\udeb6, and Heavy \ud83e\udea8 among others. Haptics can be accessed via the HapticsManager Audio Let the music play. Easily Play and manage music \ud83d\udd0a and SFX \ud83d\udd14 with customizable volume and pitch. Use AudioManager to handle any in-game sounds Scene Loader Transition between scenes \ud83c\udfac seamlessly. Use the Scene Loader and Transition Manager in tandem to load scenes with visible loading progress or just a generic loading screen. Transition manager supports different types of transitions that can be extended Settings A pre-made settings \u2699\ufe0f panel has been created for your convenience. Easily integrate toggles for music and haptics, as well as attributions for non-cc0 artwork. SettingsHandler deals with everything related to settings To add attribution, add info in the AtrributionDataSO and it'll reflect automatically Button Attribute Test with ease \ud83d\udc68\ud83c\udffb\u200d\ud83d\udd2c. Use attribute [Button] to expose the method as shown in above image UI Particles Particles \u2728 always make things better. Now integrate particle systems in overlay canvas. Add the UIParticleSystem component to render particles in UI UI Gradient Add gradients \ud83c\udfa8 to UI Images for a more polished look. You can make bland screens pop much more using simple vertical and horizontal gradients. Add the Gradient or Gradient2 component on any image UI Gradient example Render Texture Creator Render the world \ud83c\udf0f in UI. Easily set up dynamically created render textures that don't bloat your build size. RenderTextureCamera prefab can be found in Assets/Prefabs/RenderTextureCamera Place it in scene, use the camera to set up your visuals, assign raw images, and hit play Some helpful buttons are also provided on the script to help you Custom Shaders Let the creative juices flow \ud83e\udde0. Some basic custom shaders to create effects like Checkerboard, Heat Haze, Stipple, Better Transparency All custom shader can be found in Assets/Shaders 3D Mask Mask \ud83c\udfad 3D objects in world space. You can make objects be visible either inside or outside the mask object. Mask shaders can be found in Assets/Shaders/3DMask An example showcasing this can be found in Assets/Prefabs/3DMask/3DMaskExample 9-sliced Circles Life is a circle \u26aa. You can create a lot of UI just using a 9-sliced white circle sprite. The project already has Circle_512 and Circle_64 sprites that have been sliced To use them, assign the sprite to an image component and play around with the \"Pixels Per Unit Multiplier\" value to get the desired rounding. 9-slicing example Extension Methods Collections Array and List extension menthods to shuffle, get random item, get random index, delete null elements, debug collection. Scroll Methods to auto-scroll to a specific point or item in the scrollview. Animator Controller Start animation from random frame, change speed of animations. Camera Transition camera positiona nd rotation, shake camera, change FOV. TMP_Text Animate numbers to easily show changing values. Utilities Floating Text Use it to show damage text, money earned/spent, etc. Floating text can be spawned via [FloatingTextManager] Tags and Layers Easily access all Tags and Layers as an Enum. Custom Buttons Create buttons easily vis pre-defined templates. To create a custon button, go to Create > UI > CustomButton Editor Scripts These features can be accessed from top menu bar - CustomTools Screenshot Take high resolution screenshots of everything rendered in your game camera. Object Renamer Rename a bunch of scene objects together. It also supports ascending and decending serialization. Object Replacer Replace objects in your scene with a new prefab. Optionally, you can also delete old objects.","title":"Features"},{"location":"features/#features","text":"","title":"Features"},{"location":"features/#currency-manager","text":"Money matters \ud83d\udcb8. Use one manager per currency, assign relevant data in the corresponding SO and you're set. [CurrencyManager] prefab can be found in Assets/Prefabs/Currency Make sure the respective 2D and 3D currency prefabs are added in PoolBoss","title":"Currency Manager"},{"location":"features/#pooling","text":"Pool is cool \ud83d\ude0e. When you need a bunch of the same prefab multiple times, use pooling instead of spawning them at runtime for better runtime performance. Don't forget to add your prefabs to PoolBoss","title":"Pooling"},{"location":"features/#level-end-screens","text":"Some wins \ud83c\udf89, some fails \u2620\ufe0f. A set of default screens have already been integrated for easy game flow. To customize, extend the LevelEndScreenBase script and create custom win and lose scripts","title":"Level End Screens"},{"location":"features/#progress-bars","text":"Keep progressing \ud83d\udcc8. A variety of progress bars have been pre-made for easy integration You can find the different types of progress bars in Assets/Prefabs/ProgressBar","title":"Progress Bars"},{"location":"features/#haptics","text":"Tap, vibrate, experience \ud83d\udcf3. Choose from pre-built presets like Success \u2705, Failure \u26a0\ufe0f, Light \ud83e\udeb6, and Heavy \ud83e\udea8 among others. Haptics can be accessed via the HapticsManager","title":"Haptics"},{"location":"features/#audio","text":"Let the music play. Easily Play and manage music \ud83d\udd0a and SFX \ud83d\udd14 with customizable volume and pitch. Use AudioManager to handle any in-game sounds","title":"Audio"},{"location":"features/#scene-loader","text":"Transition between scenes \ud83c\udfac seamlessly. Use the Scene Loader and Transition Manager in tandem to load scenes with visible loading progress or just a generic loading screen. Transition manager supports different types of transitions that can be extended","title":"Scene Loader"},{"location":"features/#settings","text":"A pre-made settings \u2699\ufe0f panel has been created for your convenience. Easily integrate toggles for music and haptics, as well as attributions for non-cc0 artwork. SettingsHandler deals with everything related to settings To add attribution, add info in the AtrributionDataSO and it'll reflect automatically","title":"Settings"},{"location":"features/#button-attribute","text":"Test with ease \ud83d\udc68\ud83c\udffb\u200d\ud83d\udd2c. Use attribute [Button] to expose the method as shown in above image","title":"Button Attribute"},{"location":"features/#ui-particles","text":"Particles \u2728 always make things better. Now integrate particle systems in overlay canvas. Add the UIParticleSystem component to render particles in UI","title":"UI Particles"},{"location":"features/#ui-gradient","text":"Add gradients \ud83c\udfa8 to UI Images for a more polished look. You can make bland screens pop much more using simple vertical and horizontal gradients. Add the Gradient or Gradient2 component on any image UI Gradient example","title":"UI Gradient"},{"location":"features/#render-texture-creator","text":"Render the world \ud83c\udf0f in UI. Easily set up dynamically created render textures that don't bloat your build size. RenderTextureCamera prefab can be found in Assets/Prefabs/RenderTextureCamera Place it in scene, use the camera to set up your visuals, assign raw images, and hit play Some helpful buttons are also provided on the script to help you","title":"Render Texture Creator"},{"location":"features/#custom-shaders","text":"Let the creative juices flow \ud83e\udde0. Some basic custom shaders to create effects like Checkerboard, Heat Haze, Stipple, Better Transparency All custom shader can be found in Assets/Shaders","title":"Custom Shaders"},{"location":"features/#3d-mask","text":"Mask \ud83c\udfad 3D objects in world space. You can make objects be visible either inside or outside the mask object. Mask shaders can be found in Assets/Shaders/3DMask An example showcasing this can be found in Assets/Prefabs/3DMask/3DMaskExample","title":"3D Mask"},{"location":"features/#9-sliced-circles","text":"Life is a circle \u26aa. You can create a lot of UI just using a 9-sliced white circle sprite. The project already has Circle_512 and Circle_64 sprites that have been sliced To use them, assign the sprite to an image component and play around with the \"Pixels Per Unit Multiplier\" value to get the desired rounding. 9-slicing example","title":"9-sliced Circles"},{"location":"features/#extension-methods","text":"","title":"Extension Methods"},{"location":"features/#collections","text":"Array and List extension menthods to shuffle, get random item, get random index, delete null elements, debug collection.","title":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Collections"},{"location":"features/#scroll","text":"Methods to auto-scroll to a specific point or item in the scrollview.","title":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Scroll"},{"location":"features/#animator-controller","text":"Start animation from random frame, change speed of animations.","title":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Animator Controller"},{"location":"features/#camera","text":"Transition camera positiona nd rotation, shake camera, change FOV.","title":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Camera"},{"location":"features/#tmp_text","text":"Animate numbers to easily show changing values.","title":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TMP_Text"},{"location":"features/#utilities","text":"","title":"Utilities"},{"location":"features/#floating-text","text":"Use it to show damage text, money earned/spent, etc. Floating text can be spawned via [FloatingTextManager]","title":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Floating Text"},{"location":"features/#tags-and-layers","text":"Easily access all Tags and Layers as an Enum.","title":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Tags and Layers"},{"location":"features/#custom-buttons","text":"Create buttons easily vis pre-defined templates. To create a custon button, go to Create > UI > CustomButton","title":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Custom Buttons"},{"location":"features/#editor-scripts","text":"These features can be accessed from top menu bar - CustomTools","title":"Editor Scripts"},{"location":"features/#screenshot","text":"Take high resolution screenshots of everything rendered in your game camera.","title":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Screenshot"},{"location":"features/#object-renamer","text":"Rename a bunch of scene objects together. It also supports ascending and decending serialization.","title":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Object Renamer"},{"location":"features/#object-replacer","text":"Replace objects in your scene with a new prefab. Optionally, you can also delete old objects.","title":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Object Replacer"},{"location":"scripts/","text":"Scripts An overview of how certain scripts should be used. GameManager GlobalReferences LevelManager SettingsHandler GameState GameEvents CoroutineManager LevelEndScreenBase Logger FloatingTextManager ButtonAnimator AdsManager AnalyticsHandler SaveManager StaticInstance, Singleton, PersistentSingleton","title":"Scripts"},{"location":"scripts/#scripts","text":"An overview of how certain scripts should be used.","title":"Scripts"},{"location":"scripts/#gamemanager","text":"","title":"GameManager"},{"location":"scripts/#globalreferences","text":"","title":"GlobalReferences"},{"location":"scripts/#levelmanager","text":"","title":"LevelManager"},{"location":"scripts/#settingshandler","text":"","title":"SettingsHandler"},{"location":"scripts/#gamestate","text":"","title":"GameState"},{"location":"scripts/#gameevents","text":"","title":"GameEvents"},{"location":"scripts/#coroutinemanager","text":"","title":"CoroutineManager"},{"location":"scripts/#levelendscreenbase","text":"","title":"LevelEndScreenBase"},{"location":"scripts/#logger","text":"","title":"Logger"},{"location":"scripts/#floatingtextmanager","text":"","title":"FloatingTextManager"},{"location":"scripts/#buttonanimator","text":"","title":"ButtonAnimator"},{"location":"scripts/#adsmanager","text":"","title":"AdsManager"},{"location":"scripts/#analyticshandler","text":"","title":"AnalyticsHandler"},{"location":"scripts/#savemanager","text":"","title":"SaveManager"},{"location":"scripts/#staticinstance-singleton-persistentsingleton","text":"","title":"StaticInstance, Singleton, PersistentSingleton"},{"location":"scripts/#_1","text":"","title":""}]}